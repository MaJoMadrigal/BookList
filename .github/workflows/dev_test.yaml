name: PR Pipeline
#Comment1
on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-20.04
    # Set job outputs to values from filter step
    outputs:
      terraform: ${{ steps.filter.outputs.terraform }}
      serverless: ${{ steps.filter.outputs.serverless }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          base: main
          filters: |
            terraform:
              - 'Terraform/**'
            serverless:
              - 'Serverless/**'
            frontend:
              - 'Frontend/**'

  terraform:
    needs: changes
    if: ${{ needs.changes.outputs.terraform == 'true' }}
    runs-on: ubuntu-20.04
    name: "Terraform"
    steps:
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://${{secrets.INNERSOURCE_READ_USER}}:${{secrets.INNERSOURCE_READ_PAT}}@github.com/
      - uses: actions/checkout@main
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
      - name: Terraform fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: |
          terraform init
        working-directory: Terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: Terraform
        env:
          TF_WORKSPACE: "prod"

  serverless-services:
    needs: [changes]
    if: ${{ always() && needs.changes.outputs.serverless == 'true' }}
    runs-on: ubuntu-20.04
    name: "serverless"
    steps:
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: https://${{secrets.INNERSOURCE_READ_USER}}:${{secrets.INNERSOURCE_READ_PAT}}@github.com/
      - uses: actions/checkout@main
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Setup Node"
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: "Install Serverless"
        run: npm install -g serverless
      - name: "Setup Python 3.7"
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: "Pip Install testing dependencies"
        run: |
          python -m pip install --upgrade pip
            - name: "Serverless Deploy"
        run: |
          sls deploy
        working-directory: Serverless